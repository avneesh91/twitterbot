
==================== FINAL INTERFACE ====================
2019-01-19 06:00:32.172721683 UTC

interface main:Common 8063
  interface hash: 213ef688d8f7553cc83c2092d66fe986
  ABI hash: 90d3e7114d91ca7ac47b7f50db13c458
  export-list hash: 3ae5472b77a4f84f98c7f602ac133de9
  orphan hash: 5ebf8b1b58f8cf3efd04cf6bb5c74716
  flag hash: 7eb45cf1046ea6651c52c40ae206522f
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Common.getOAuthTokens
  Common.getProxyEnv
  Common.getTWInfoFromEnv
module dependencies:
package dependencies: RSA-2.3.1 SHA-1.6.4.4 StateVar-1.1.1.1
                      adjunctions-4.4 aeson-1.4.2.0 array-0.5.3.0 asn1-encoding-0.9.5
                      asn1-parse-0.9.4 asn1-types-0.3.2 async-2.2.1 attoparsec-0.13.2.2
                      authenticate-oauth-1.6 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8 base64-bytestring-1.0.0.2 basement-0.0.8
                      bifunctors-5.5.3 binary-0.8.6.0 blaze-builder-0.4.1.0
                      bytestring-0.10.8.2 call-stack-0.1.0 case-insensitive-1.2.0.11
                      cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1 conduit-extra-1.3.0
                      connection-0.2.8 containers-0.6.0.1 contravariant-1.5 cookie-0.4.4
                      crypto-api-0.13.3 crypto-pubkey-types-0.4.3 cryptonite-0.25
                      data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.4.0
                      directory-1.3.3.0 distributive-0.6 dlist-0.8.0.5 entropy-0.4.1.4
                      exceptions-0.10.0 filepath-1.4.2.1 free-5.1 ghc-boot-th-8.6.3
                      ghc-prim-0.5.3 hashable-1.2.7.0 hourglass-0.2.12 http-client-0.5.14
                      http-client-tls-0.3.5.3 http-conduit-2.3.4 http-types-0.12.2
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      lens-4.17 lens-aeson-1.0.2 memory-0.14.18 mime-types-0.1.0.9
                      mtl-2.2.2 network-2.8.0.0 network-uri-2.6.1.0 old-locale-1.0.0.7
                      parsec-3.1.13.0 pem-0.2.4 pretty-1.1.3.6 primitive-0.6.4.0
                      profunctors-5.3 random-1.1 reflection-2.1.4 resourcet-1.2.2
                      scientific-0.3.6.2 semigroupoids-5.3.2 socks-0.5.6 stm-2.5.0.0
                      streaming-commons-0.2.1.0 tagged-0.8.6 template-haskell-2.14.0.0
                      text-1.2.3.1 th-abstraction-0.2.10.0 time-1.8.0.2
                      time-locale-compat-0.1.1.5 tls-1.4.1 transformers-0.5.5.0
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      twitter-conduit-0.3.0 twitter-types-0.7.2.2
                      twitter-types-lens-0.7.2 unix-2.7.2.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      x509-1.7.5 x509-store-1.6.7 x509-system-1.6.6
                      x509-validation-1.6.11 zlib-0.6.2
orphans: lens-aeson-1.0.2:Data.Aeson.Lens
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         RSA-2.3.1:Codec.Crypto.RSA.Pure reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         http-client-0.5.14:Network.HTTP.Client.Request
         basement-0.0.8:Basement.UArray.Base basement-0.0.8:Basement.Block
         network-2.8.0.0:Network.Socket
         hashable-1.2.7.0:Data.Hashable.Generic
         stm-2.5.0.0:Control.Monad.STM time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         basement-0.0.8:Basement.Block.Base basement-0.0.8:Basement.Monad
                         basement-0.0.8:Basement.MutableBuilder basement-0.0.8:Basement.Nat
                         basement-0.0.8:Basement.NonEmpty
                         basement-0.0.8:Basement.Numerical.Subtractive
                         basement-0.0.8:Basement.PrimType basement-0.0.8:Basement.String
                         basement-0.0.8:Basement.String.Encoding.ASCII7
                         basement-0.0.8:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.8:Basement.String.Encoding.UTF16
                         basement-0.0.8:Basement.String.Encoding.UTF32
                         basement-0.0.8:Basement.Types.OffsetSize
                         basement-0.0.8:Basement.UArray.Base
                         basement-0.0.8:Basement.UTF8.Base
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         conduit-1.3.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.Graph
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.5:Data.DList
                         free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         http-client-0.5.14:Network.HTTP.Client
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         lens-aeson-1.0.2:Data.Aeson.Lens network-uri-2.6.1.0:Network.URI
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.10.0:Language.Haskell.TH.Datatype
                         twitter-types-0.7.2.2:Web.Twitter.Types
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  authenticate-oauth-1.6:Web.Authenticate.OAuth 23fc7d2ffc89899c0d979fd320e7ce3d
import  -/  base-4.12.0.0:Control.Applicative f4c86ba32601955aaee0c0abccbaeade
import  -/  base-4.12.0.0:Data.Functor 22aac80fdb6c7b7f60b4aaab86afee64
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.Err 28d622b06927ca4c3b335ec5326c34b2
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.Environment 2204870ad586be67c274aa49ce9ae53a
import  -/  base-4.12.0.0:Text.Read e428ad664707f4e90693a55e6a6b4b1a
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 c0dde70a3c4a3860ce2b8e5fffce062d
import  -/  case-insensitive-1.2.0.11:Data.CaseInsensitive 5f34d30f1bfd7080e9f76785e9352733
import  -/  case-insensitive-1.2.0.11:Data.CaseInsensitive.Internal 7495b0e68c759b4284101c372d14925a
import  -/  containers-0.6.0.1:Data.Map 4f92a276b97311a7619a6e03c8ca6ee3
import  -/  containers-0.6.0.1:Data.Map.Internal 7258cbfb7d1b897678a42b6739fc4dac
import  -/  data-default-class-0.1.2.0:Data.Default.Class 091e8aee4f569a016bdd0efca6821d2b
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  http-client-0.5.14:Network.HTTP.Client.Types a408a3cd025ae0c17cedf3eab1b5f6d4
import  -/  http-conduit-2.3.4:Network.HTTP.Conduit 9d278d2b90dbbbcb4fb520a8e18e9f2c
import  -/  lens-4.17:Control.Lens 5e0aa8fe17a0cb8480df0d6fe0b80538
import  -/  lens-4.17:Control.Lens.Setter ad010aa15c6aecee01c6ea3754e9529c
import  -/  lens-4.17:Control.Lens.Tuple 271438da3796d3dce01712235dac62ad
import  -/  network-uri-2.6.1.0:Network.URI 237256a6417781aa915b4706224bc250
import  -/  twitter-conduit-0.3.0:Web.Twitter.Conduit 8a8aef3edf574ec2dbd886666390f52e
import  -/  twitter-conduit-0.3.0:Web.Twitter.Conduit.Types 328c53b1c9ecd5c161eb1062d9499f92
0b04ebb03e4354b62b23bc2c87c97acc
  $sfromList ::
    [(Data.CaseInsensitive.Internal.CI GHC.Base.String, a)]
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a
                   (ds :: [(Data.CaseInsensitive.Internal.CI GHC.Base.String, a)]) ->
                 case ds of wild {
                   []
                   -> Data.Map.Internal.Tip
                        @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                        @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.CaseInsensitive.Internal.CI ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip
                                @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                @ a)
                             (Data.Map.Internal.Tip
                                @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { Data.CaseInsensitive.Internal.CI ds4 ds5 ->
                           case ky of wild5 { Data.CaseInsensitive.Internal.CI ds6 ds7 ->
                           case GHC.Classes.$fOrd[]_$s$ccompare1 ds5 ds7 of wild6 {
                             DEFAULT
                             -> Common.$sfromList1
                                  @ a
                                  wild2
                                  (Data.Map.Internal.Bin
                                     @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip
                                        @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                        @ a))
                             GHC.Types.LT
                             -> Common.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip
                                        @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ (Data.CaseInsensitive.Internal.CI GHC.Base.String)
                                        @ a))
                                  wild2 } } } } } } }) -}
bfa32e7445f1f57fe336271076017e8c
  $sfromList1 ::
    [(Data.CaseInsensitive.Internal.CI GHC.Base.String, a)]
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
f43a4203ed1701560e9b0bfa3fee002b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Common.$trModule3
                   Common.$trModule1) -}
04a1c2c3de2d3fe8e8cde54de21bffff
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Common.$trModule2) -}
79f94f4ef99562600e6d2e5f8e26e74c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Common"#) -}
5eb5be7d46f6e0ac3b09a44e82817da5
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Common.$trModule4) -}
1f2b1ed635036f18945e10de27d34c9c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
7f79a48ebf837335dd136e979ce79287
  $w$sgo13 ::
    Data.CaseInsensitive.Internal.CI GHC.Base.String
    -> GHC.Base.String
    -> a1
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a1
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a1
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [2] -}
8d039ef05dab20135974a5ce0c2a5823
  $wpoly_go1 ::
    GHC.Base.String
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a
    -> GHC.Maybe.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [2] -}
10e2e42238978bf635a296a135588e20
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a
    -> [(Data.CaseInsensitive.Internal.CI GHC.Base.String, a)]
    -> Data.Map.Internal.Map
         (Data.CaseInsensitive.Internal.CI GHC.Base.String) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [2] -}
8cc9376f083d4e946f696077ae46d946
  getOAuthTokens ::
    GHC.Types.IO
      (Web.Authenticate.OAuth.OAuth, Web.Authenticate.OAuth.Credential)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Common.getOAuthTokens1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <(Web.Authenticate.OAuth.OAuth,
                            Web.Authenticate.OAuth.Credential)>_R)) -}
b7aa85ed4a707fb5d8c4a6e257bb012c
  getOAuthTokens1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Web.Authenticate.OAuth.OAuth,
           Web.Authenticate.OAuth.Credential) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Maybe.Maybe GHC.Base.String)
                        ipv1
                        Common.getOAuthTokens_name3
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Maybe.Nothing
                   -> case System.Environment.getEnv2 Common.getOAuthTokens_name3 ipv2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                (Web.Authenticate.OAuth.OAuth,
                                 Web.Authenticate.OAuth.Credential) #)
                      of {}
                   GHC.Maybe.Just x
                   -> case (GHC.Magic.noinline
                              @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                              GHC.IO.Encoding.getForeignEncoding)
                             `cast`
                           (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case GHC.Foreign.charIsRepresentable3
                             @ (GHC.Maybe.Maybe GHC.Base.String)
                             ipv5
                             Common.getOAuthTokens_name2
                             System.Environment.getEnv3
                               `cast`
                             (<Foreign.C.String.CString>_R
                              ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      case ipv7 of wild1 {
                        GHC.Maybe.Nothing
                        -> case System.Environment.getEnv2 Common.getOAuthTokens_name2 ipv6
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     (Web.Authenticate.OAuth.OAuth,
                                      Web.Authenticate.OAuth.Credential) #)
                           of {}
                        GHC.Maybe.Just x1
                        -> case (GHC.Magic.noinline
                                   @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                                   GHC.IO.Encoding.getForeignEncoding)
                                  `cast`
                                (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                                  ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                           case GHC.Foreign.charIsRepresentable3
                                  @ (GHC.Maybe.Maybe GHC.Base.String)
                                  ipv9
                                  Common.getOAuthTokens_name1
                                  System.Environment.getEnv3
                                    `cast`
                                  (<Foreign.C.String.CString>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <GHC.Maybe.Maybe GHC.Base.String>_R))
                                  ipv8 of ds7 { (#,#) ipv10 ipv11 ->
                           case ipv11 of wild2 {
                             GHC.Maybe.Nothing
                             -> case System.Environment.getEnv2
                                       Common.getOAuthTokens_name1
                                       ipv10
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          (Web.Authenticate.OAuth.OAuth,
                                           Web.Authenticate.OAuth.Credential) #)
                                of {}
                             GHC.Maybe.Just x2
                             -> case (GHC.Magic.noinline
                                        @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                                        GHC.IO.Encoding.getForeignEncoding)
                                       `cast`
                                     (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                                       ipv10 of ds8 { (#,#) ipv12 ipv13 ->
                                case GHC.Foreign.charIsRepresentable3
                                       @ (GHC.Maybe.Maybe GHC.Base.String)
                                       ipv13
                                       Common.getOAuthTokens_name
                                       System.Environment.getEnv3
                                         `cast`
                                       (<Foreign.C.String.CString>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <GHC.Maybe.Maybe GHC.Base.String>_R))
                                       ipv12 of ds9 { (#,#) ipv14 ipv15 ->
                                case ipv15 of wild3 {
                                  GHC.Maybe.Nothing
                                  -> case System.Environment.getEnv2
                                            Common.getOAuthTokens_name
                                            ipv14
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               (Web.Authenticate.OAuth.OAuth,
                                                Web.Authenticate.OAuth.Credential) #)
                                     of {}
                                  GHC.Maybe.Just x3
                                  -> (# ipv14,
                                        (Web.Authenticate.OAuth.OAuth
                                           Web.Twitter.Conduit.Types.twitterOAuth9
                                           Web.Twitter.Conduit.Types.twitterOAuth7
                                           Web.Twitter.Conduit.Types.twitterOAuth5
                                           Web.Twitter.Conduit.Types.twitterOAuth3
                                           Web.Authenticate.OAuth.HMACSHA1
                                           (Data.ByteString.Internal.packChars x)
                                           (Data.ByteString.Internal.packChars x1)
                                           (GHC.Maybe.Nothing @ Data.ByteString.Internal.ByteString)
                                           (GHC.Maybe.Nothing @ Data.ByteString.Internal.ByteString)
                                           Web.Authenticate.OAuth.OAuth10a,
                                         (GHC.Types.:
                                            @ (Data.ByteString.Internal.ByteString,
                                               Data.ByteString.Internal.ByteString)
                                            (Common.getOAuthTokens3,
                                             Data.ByteString.Internal.packChars x2)
                                            (GHC.Types.:
                                               @ (Data.ByteString.Internal.ByteString,
                                                  Data.ByteString.Internal.ByteString)
                                               (Common.getOAuthTokens2,
                                                Data.ByteString.Internal.packChars x3)
                                               (GHC.Types.[]
                                                  @ (Data.ByteString.Internal.ByteString,
                                                     Data.ByteString.Internal.ByteString))))
                                           `cast`
                                         (Sym (Web.Authenticate.OAuth.N:Credential[0]))) #) } } } } } } } } } } } }) -}
6b5b8d179fdcbfc93eff8cdc6ba9d24a
  getOAuthTokens2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Common.getOAuthTokens_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Common.getOAuthTokens_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
62517c556136e152630b04f93327ce18
  getOAuthTokens3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Common.getOAuthTokens_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Common.getOAuthTokens_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
cfdf489c0ef7234d754b14e34a097d16
  getOAuthTokens4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OAUTH_ACCESS_SECRET"#) -}
eae1dcb29b4780f1f670791599a916dc
  getOAuthTokens5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OAUTH_ACCESS_TOKEN"#) -}
920370a6fbe99901c1bc03bc4c18c873
  getOAuthTokens6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OAUTH_CONSUMER_SECRET"#) -}
33c00448f052210c5a3a0df251e287a5
  getOAuthTokens7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OAUTH_CONSUMER_KEY"#) -}
3b6988cde21a147e6c0feb123224d5e9
  getOAuthTokens_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oauth_token_secret"#) -}
1349a4b7b2dad769c46778931a0e1c1a
  getOAuthTokens_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oauth_token"#) -}
7a7e9c64baa603dec537689137b3ad96
  getOAuthTokens_name :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Common.getOAuthTokens4) -}
498bdea94e4c73fe1417e3d40ca747e4
  getOAuthTokens_name1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Common.getOAuthTokens5) -}
f2e6850d9ea9b335121ed2151786c1da
  getOAuthTokens_name2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Common.getOAuthTokens6) -}
74293fba2bd45f3db202fb9f00752284
  getOAuthTokens_name3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Common.getOAuthTokens7) -}
3f5a7447a940e042cdcc5820371d879e
  getProxyEnv ::
    GHC.Types.IO (GHC.Maybe.Maybe Network.HTTP.Client.Types.Proxy)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Common.getProxyEnv1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <GHC.Maybe.Maybe Network.HTTP.Client.Types.Proxy>_R)) -}
f49960469763ba803f070e91ea99c28c
  getProxyEnv1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Maybe.Maybe Network.HTTP.Client.Types.Proxy #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnvironment1 s of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    case Data.CaseInsensitive.Internal.$fFoldCaseChar_$cfoldCaseList
                           (GHC.CString.unpackCString#
                              Common.getProxyEnv12) of dt1 { DEFAULT ->
                    let {
                      ipv2 :: Data.Map.Internal.Map
                                (Data.CaseInsensitive.Internal.CI GHC.Base.String) GHC.Base.String
                      = Common.$sfromList
                          @ [GHC.Types.Char]
                          (GHC.Base.map
                             @ (GHC.Base.String, GHC.Base.String)
                             @ (Data.CaseInsensitive.Internal.CI GHC.Base.String,
                                GHC.Base.String)
                             Common.getProxyEnv11
                             ipv1)
                    } in
                    case Common.$wpoly_go1 @ [GHC.Types.Char] dt1 ipv2 of wild {
                      GHC.Maybe.Nothing
                      -> case Data.CaseInsensitive.Internal.$fFoldCaseChar_$cfoldCaseList
                                (GHC.CString.unpackCString#
                                   Common.getProxyEnv10) of dt2 { DEFAULT ->
                         case Common.$wpoly_go1 @ [GHC.Types.Char] dt2 ipv2 of wild1 {
                           GHC.Maybe.Nothing
                           -> case Data.CaseInsensitive.Internal.$fFoldCaseChar_$cfoldCaseList
                                     (GHC.CString.unpackCString#
                                        Common.getProxyEnv9) of dt3 { DEFAULT ->
                              case Common.$wpoly_go1 @ [GHC.Types.Char] dt3 ipv2 of wild2 {
                                GHC.Maybe.Nothing
                                -> GHC.Maybe.Nothing @ Network.HTTP.Client.Types.Proxy
                                GHC.Maybe.Just x -> Common.getProxyEnv2 x } }
                           GHC.Maybe.Just ipv3 -> Common.getProxyEnv2 ipv3 } }
                      GHC.Maybe.Just ipv3 -> Common.getProxyEnv2 ipv3 } } #) }) -}
cc74ddd28f0a85bead711e4d2785538c
  getProxyEnv10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("http_proxy"#) -}
e8b448f3485fff588bc7df0659689271
  getProxyEnv11 ::
    ([GHC.Types.Char], [GHC.Types.Char])
    -> (Data.CaseInsensitive.Internal.CI GHC.Base.String,
        [GHC.Types.Char])
  {- Arity: 1, Strictness: <L,U(U,1*U)>m,
     Unfolding: (\ (ds :: ([GHC.Types.Char], [GHC.Types.Char])) ->
                 (case ds of wild { (,) a1 b2 ->
                  case Data.CaseInsensitive.Internal.$fFoldCaseChar_$cfoldCaseList
                         a1 of dt1 { DEFAULT ->
                  Data.CaseInsensitive.Internal.CI @ GHC.Base.String a1 dt1 } },
                  case ds of wild { (,) a1 b2 -> b2 })) -}
292fe8f42b90f13c8d55165da31c088f
  getProxyEnv12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("https_proxy"#) -}
2cb913736f883899e446b7cb70d7d1a4
  getProxyEnv2 ::
    GHC.Base.String -> GHC.Maybe.Maybe Network.HTTP.Client.Types.Proxy
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Base.String)[OneShot] ->
                 case (Network.URI.$wuri
                         @ (Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply [GHC.Types.Char] () Network.URI.URI)))
                         x
                         (GHC.Types.[] @ GHC.Types.Char)
                         1#
                         1#
                         GHC.Tuple.()
                         (Network.URI.isAbsoluteURI4 @ Network.URI.URI)
                         (Network.URI.isAbsoluteURI3 @ Network.URI.URI)
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 [GHC.Types.Char] () Network.URI.URI))>_R))
                         (Network.URI.isAbsoluteURI1 @ Network.URI.URI)
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 [GHC.Types.Char] () Network.URI.URI))>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply
                                    [GHC.Types.Char] () Network.URI.URI))>_R) of wild {
                   Text.Parsec.Prim.Consumed r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   [GHC.Types.Char] () Network.URI.URI>_R) of wild1 {
                        Text.Parsec.Prim.Ok x2 ds ds1
                        -> case x2 of wild2 { Network.URI.URI ds2 ds3 ds4 ds5 ds6 ->
                           case ds3 of wild3 {
                             GHC.Maybe.Nothing
                             -> GHC.Maybe.Nothing @ Network.HTTP.Client.Types.Proxy
                             GHC.Maybe.Just a1 -> Common.getProxyEnv3 a1 } }
                        Text.Parsec.Prim.Error err
                        -> GHC.Maybe.Nothing @ Network.HTTP.Client.Types.Proxy }
                   Text.Parsec.Prim.Empty r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply
                                   [GHC.Types.Char] () Network.URI.URI>_R) of wild1 {
                        Text.Parsec.Prim.Ok x2 ds ds1
                        -> case x2 of wild2 { Network.URI.URI ds2 ds3 ds4 ds5 ds6 ->
                           case ds3 of wild3 {
                             GHC.Maybe.Nothing
                             -> GHC.Maybe.Nothing @ Network.HTTP.Client.Types.Proxy
                             GHC.Maybe.Just a1 -> Common.getProxyEnv3 a1 } }
                        Text.Parsec.Prim.Error err
                        -> GHC.Maybe.Nothing @ Network.HTTP.Client.Types.Proxy } }) -}
a27b644d86280bc3f5514b971c2758b8
  getProxyEnv3 ::
    Network.URI.URIAuth
    -> GHC.Maybe.Maybe Network.HTTP.Client.Types.Proxy
  {- Arity: 1, Strictness: <L,U(A,U,1*U)>m2,
     Unfolding: (\ (a1 :: Network.URI.URIAuth)[OneShot] ->
                 GHC.Maybe.Just
                   @ Network.HTTP.Client.Types.Proxy
                   (Network.HTTP.Client.Types.Proxy
                      (case a1 of wild { Network.URI.URIAuth ds1 ds2 ds3 ->
                       Data.ByteString.Internal.packChars ds2 })
                      (case a1 of wild { Network.URI.URIAuth ds1 ds2 ds3 ->
                       case ds3 of wild1 {
                         [] -> Common.getProxyEnv8
                         : ds xs
                         -> case ds of wild2 { GHC.Types.C# ds4 ->
                            case ds4 of ds5 {
                              DEFAULT -> Common.getProxyEnv7 wild1
                              ':'#
                              -> case Text.Read.readEither8
                                        @ GHC.Types.Int
                                        (Text.ParserCombinators.ReadP.run
                                           @ GHC.Types.Int
                                           Common.getProxyEnv6
                                           xs) of wild3 {
                                   [] -> Common.getProxyEnv5
                                   : x ds6
                                   -> case ds6 of wild4 {
                                        [] -> x : ipv ipv1 -> Common.getProxyEnv4 } } } } } }))) -}
c2e052e4ea8bbfedcfb5b40c69f6e3b2
  getProxyEnv4 :: GHC.Types.Int
  {- Strictness: x -}
0ee13240a9bb6b4e3f4bab8e6c04c641
  getProxyEnv5 :: GHC.Types.Int
  {- Strictness: x -}
580f08493796db119b2654b8fffe57e8
  getProxyEnv6 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt_$sreadNumber
                   GHC.Read.$fReadInt2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither7 @ GHC.Types.Int)) -}
7f9a856c051c7d47781a7e817f5f6078
  getProxyEnv7 :: [GHC.Types.Char] -> GHC.Types.Int
  {- Arity: 1, Strictness: <B,U>x -}
748b78e073f4644f6e545711c4f180f1
  getProxyEnv8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8080#) -}
73b59268f6f175b846b5831dffdbf57f
  getProxyEnv9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("proxy"#) -}
f4553e125d6facf6e495dc77c575274d
  getTWInfoFromEnv :: GHC.Types.IO Web.Twitter.Conduit.Types.TWInfo
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Common.getTWInfoFromEnv1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Web.Twitter.Conduit.Types.TWInfo>_R)) -}
45a852133e5b6a4d9967c2e20170b7a5
  getTWInfoFromEnv1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Web.Twitter.Conduit.Types.TWInfo #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Common.getProxyEnv1 s of ds1 { (#,#) ipv ipv1 ->
                 case Common.getOAuthTokens1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) oa cred ->
                 (# ipv2,
                    Web.Twitter.Conduit.Types.TWInfo
                      (Web.Twitter.Conduit.Types.TWToken oa cred)
                      ipv1 #) } } }) -}
"SPEC/Common fromList @ (CI String) _" [orphan] forall @ a
                                                       ($dOrd :: GHC.Classes.Ord
                                                                   (Data.CaseInsensitive.Internal.CI
                                                                      GHC.Base.String))
  Data.Map.Internal.fromList @ (Data.CaseInsensitive.Internal.CI
                                  GHC.Base.String)
                             @ a
                             $dOrd
  = Common.$sfromList @ a
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

