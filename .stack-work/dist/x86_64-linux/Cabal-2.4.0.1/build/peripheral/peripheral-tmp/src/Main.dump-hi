
==================== FINAL INTERFACE ====================
2019-02-23 10:07:25.899004303 UTC

interface main:Main 8063
  interface hash: 4591e15cb4459059fc3375ccc57798c8
  ABI hash: 80d574ceb3f7f3b56d9dc8ed4592b9e4
  export-list hash: 12a061fffa51a7113a5c6fc0f315c7ac
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f2c4849abc8a839ab50fd9ef571df48d
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.credential
  Main.getSum
  Main.main
  Main.tokens
  Main.twInfo
module dependencies:
package dependencies: RSA-2.3.1 SHA-1.6.4.4 StateVar-1.1.1.1
                      adjunctions-4.4 aeson-1.4.2.0 array-0.5.3.0 asn1-encoding-0.9.5
                      asn1-parse-0.9.4 asn1-types-0.3.2 async-2.2.1 attoparsec-0.13.2.2
                      authenticate-oauth-1.6 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8 base64-bytestring-1.0.0.2 basement-0.0.8
                      bifunctors-5.5.3 binary-0.8.6.0 blaze-builder-0.4.1.0
                      bytestring-0.10.8.2 call-stack-0.1.0 case-insensitive-1.2.0.11
                      cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1 conduit-extra-1.3.0
                      connection-0.2.8 containers-0.6.0.1 contravariant-1.5 cookie-0.4.4
                      crypto-api-0.13.3 crypto-pubkey-types-0.4.3 cryptonite-0.25
                      data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.4.0
                      directory-1.3.3.0 distributive-0.6 dlist-0.8.0.5 entropy-0.4.1.4
                      exceptions-0.10.0 filepath-1.4.2.1 free-5.1 ghc-boot-th-8.6.3
                      ghc-prim-0.5.3 hashable-1.2.7.0 hourglass-0.2.12 http-client-0.5.14
                      http-client-tls-0.3.5.3 http-conduit-2.3.4 http-types-0.12.2
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      lens-4.17 lens-aeson-1.0.2 memory-0.14.18 mime-types-0.1.0.9
                      mtl-2.2.2 network-2.8.0.0 network-uri-2.6.1.0 old-locale-1.0.0.7
                      parsec-3.1.13.0 pem-0.2.4 pretty-1.1.3.6 primitive-0.6.4.0
                      profunctors-5.3 random-1.1 reflection-2.1.4 resourcet-1.2.2
                      scientific-0.3.6.2 semigroupoids-5.3.2 socks-0.5.6 stm-2.5.0.0
                      streaming-commons-0.2.1.0 tagged-0.8.6 template-haskell-2.14.0.0
                      text-1.2.3.1 th-abstraction-0.2.10.0 time-1.8.0.2
                      time-locale-compat-0.1.1.5 tls-1.4.1 transformers-0.5.5.0
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      twitter-conduit-0.3.0 twitter-types-0.7.2.2
                      twitter-types-lens-0.7.2 unix-2.7.2.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      x509-1.7.5 x509-store-1.6.7 x509-system-1.6.6
                      x509-validation-1.6.11 zlib-0.6.2
orphans: lens-aeson-1.0.2:Data.Aeson.Lens
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         http-client-0.5.14:Network.HTTP.Client.Request
         basement-0.0.8:Basement.UArray.Base basement-0.0.8:Basement.Block
         transformers-0.5.5.0:Control.Monad.Trans.Error
         network-2.8.0.0:Network.Socket stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Show
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         RSA-2.3.1:Codec.Crypto.RSA.Pure binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         basement-0.0.8:Basement.Block.Base basement-0.0.8:Basement.Monad
                         basement-0.0.8:Basement.MutableBuilder basement-0.0.8:Basement.Nat
                         basement-0.0.8:Basement.NonEmpty
                         basement-0.0.8:Basement.Numerical.Subtractive
                         basement-0.0.8:Basement.PrimType basement-0.0.8:Basement.String
                         basement-0.0.8:Basement.String.Encoding.ASCII7
                         basement-0.0.8:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.8:Basement.String.Encoding.UTF16
                         basement-0.0.8:Basement.String.Encoding.UTF32
                         basement-0.0.8:Basement.Types.OffsetSize
                         basement-0.0.8:Basement.UArray.Base
                         basement-0.0.8:Basement.UTF8.Base
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         conduit-1.3.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.Graph
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.5:Data.DList
                         free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         http-client-0.5.14:Network.HTTP.Client
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         lens-aeson-1.0.2:Data.Aeson.Lens network-uri-2.6.1.0:Network.URI
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.10.0:Language.Haskell.TH.Datatype
                         twitter-types-0.7.2.2:Web.Twitter.Types
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  authenticate-oauth-1.6:Web.Authenticate.OAuth 23fc7d2ffc89899c0d979fd320e7ce3d
import  -/  base-4.12.0.0:Data.Function 8645cc8669e6e5ce4091f05675436fb6
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 88c2b1c4079c52d62ed362d4eb9a5302
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 c0dde70a3c4a3860ce2b8e5fffce062d
import  -/  conduit-1.3.1:Data.Conduit 375912a1c56e3fdc646645e67c96c4e8
import  -/  conduit-1.3.1:Data.Conduit.Internal.Conduit fdf53559424393fef39b04dee858d09f
import  -/  conduit-1.3.1:Data.Conduit.List 1568f96272ff8a3e68f509509b404021
import  -/  data-default-class-0.1.2.0:Data.Default.Class 091e8aee4f569a016bdd0efca6821d2b
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  http-client-0.5.14:Network.HTTP.Client.Manager 345c79fd560dc87c1af07f19c915bfd1
import  -/  http-client-tls-0.3.5.3:Network.HTTP.Client.TLS 685e358855f19d4bbae313d2255c0591
import  -/  lens-4.17:Control.Lens 5e0aa8fe17a0cb8480df0d6fe0b80538
import  -/  lens-4.17:Control.Lens.Getter 71caf665901fb57fc4d80de8604074e1
import  -/  lens-4.17:Control.Lens.Setter ad010aa15c6aecee01c6ea3754e9529c
import  -/  text-1.2.3.1:Data.Text 78eb69b898aafd3383227a8f8c115df8
import  -/  text-1.2.3.1:Data.Text.IO 0f79d4c25fc832111c66948374be85e1
import  -/  twitter-conduit-0.3.0:Web.Twitter.Conduit 8a8aef3edf574ec2dbd886666390f52e
import  -/  twitter-conduit-0.3.0:Web.Twitter.Conduit.Base c792114f6cc1c0f8e947f426a1fd69b1
import  -/  twitter-conduit-0.3.0:Web.Twitter.Conduit.Parameters 76e0766e2be59887dcaac61417c7c89d
import  -/  twitter-conduit-0.3.0:Web.Twitter.Conduit.Status 1056c02137edb85a0787e7c75593fa78
import  -/  twitter-conduit-0.3.0:Web.Twitter.Conduit.Types 328c53b1c9ecd5c161eb1062d9499f92
import  -/  twitter-types-lens-0.7.2:Web.Twitter.Types.Lens 3f6fdd74aed5b964e18564dcb2fae731
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
f94fcd88613f125ce1f4a7c6d7267e37
  credential :: Web.Authenticate.OAuth.Credential
  {- Strictness: m2,
     Unfolding: InlineRule (0, True, True)
                Main.credential1
                  `cast`
                (Sym (Web.Authenticate.OAuth.N:Credential[0])) -}
afcccf4000395b573ad51b1539ead911
  credential1 ::
    [(Data.ByteString.Internal.ByteString,
      Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.ByteString.Internal.ByteString,
                      Data.ByteString.Internal.ByteString)
                   Main.credential6
                   Main.credential2) -}
457c4eed1471102958e8d8d13bfd58c0
  credential2 ::
    [(Data.ByteString.Internal.ByteString,
      Data.ByteString.Internal.ByteString)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.ByteString.Internal.ByteString,
                      Data.ByteString.Internal.ByteString)
                   Main.credential3
                   (GHC.Types.[]
                      @ (Data.ByteString.Internal.ByteString,
                         Data.ByteString.Internal.ByteString))) -}
932889e794f444f4c8e7dd93988a894d
  credential3 ::
    (Data.ByteString.Internal.ByteString,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Main.credential5, Main.credential4)) -}
ba5cde580fdb76c837e7084f34291710
  credential4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.credential_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.credential_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
2ab401a899f5d892a604b37fe4002691
  credential5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.credential_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.credential_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
c4ef1770dbad9ef611126d4c20a96a75
  credential6 ::
    (Data.ByteString.Internal.ByteString,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Main.credential8, Main.credential7)) -}
3464a03431862ab7f3f1659b96c2f522
  credential7 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.credential_addr#2
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.credential_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
9a09f8a94b000f7f120e65fa480f5f16
  credential8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.credential_addr#3
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.credential_addr#3
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
f53ed281d0c079937d7847e1bd58fde1
  credential_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("TkHw9jaTzwT5VRJjotYoBxKjeUzA6913i6GyMzh6Qm5aG"#) -}
1c4e080162c03b31f9d67e2743bcec44
  credential_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oauth_token_secret"#) -}
b627b2dd29446a3a1a466b042a8d09a1
  credential_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("1082354563724730368-JLjsLtsmAUc8CCQRff4jQ8e1f5Qt6h"#) -}
c61cc78ec3b3983176cba09d619c59a1
  credential_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oauth_token"#) -}
e3e1eb0e12ad6f4af4c0f3062b16af22
  getSum :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True) GHC.Num.$fNumInt_$c+ -}
db52a1de4d18d22bbce51b504b445dfe
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
cb0f3d4df69d9860b89bc974ab7165cc
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Network.HTTP.Client.Manager.newManager1
                        Network.HTTP.Client.TLS.tlsManagerSettings
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main8
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main6
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 Main.main5
                   (Main.main_goRight
                      ((Web.Twitter.Conduit.Base.sourceWithMaxId
                          @ GHC.Types.IO
                          @ Web.Twitter.Types.Status
                          @ Web.Twitter.Conduit.Status.StatusesHomeTimeline
                          Control.Monad.IO.Class.$fMonadIOIO
                          Web.Twitter.Types.$fFromJSONStatus
                          Web.Twitter.Types.Lens.$fAsStatusStatus
                          (Web.Twitter.Conduit.Status.$fHasMaxIdParamAPIRequest1
                             @ [Web.Twitter.Types.Status])
                          Main.twInfo
                          ipv1
                          Main.main2
                            `cast`
                          (Data.Functor.Identity.N:Identity[0]
                               <Web.Twitter.Conduit.Request.APIRequest
                                  Web.Twitter.Conduit.Status.StatusesHomeTimeline
                                  [Web.Twitter.Types.Status]>_R))
                         `cast`
                       (Data.Conduit.Internal.Conduit.N:ConduitT[0]
                            <()>_N <Web.Twitter.Types.Status>_N <GHC.Types.IO>_N <()>_R)
                         @ ()
                         (Data.Conduit.Internal.Pipe.Done
                            @ ()
                            @ ()
                            @ Web.Twitter.Types.Status
                            @ ()
                            @ GHC.Types.IO
                            @ ()))
                      (Data.Conduit.List.isolate2
                         @ GHC.Types.IO
                         @ Web.Twitter.Types.Status
                         100#
                         @ ()
                         (Data.Conduit.Internal.Pipe.Done
                            @ Web.Twitter.Types.Status
                            @ Web.Twitter.Types.Status
                            @ Web.Twitter.Types.Status
                            @ ()
                            @ GHC.Types.IO
                            @ ())))
                   ipv4 } } }) -}
4edaebffc7ec6c9e1f6a15a08fd0ecf0
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
fc05edc60a3d4d3e8ecde77d128b85b9
  main2 ::
    Data.Functor.Identity.Identity
      (Web.Twitter.Conduit.Request.APIRequest
         Web.Twitter.Conduit.Status.StatusesHomeTimeline
         [Web.Twitter.Types.Status])
  {- Unfolding: (Main.main4
                   Main.main3
                     `cast`
                   (<GHC.Maybe.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                  <GHC.Maybe.Maybe GHC.Integer.Type.Integer>_R))
                   Web.Twitter.Conduit.Status.homeTimeline) -}
9524d1306fe7eb4d9e0c5971887da604
  main3 ::
    GHC.Maybe.Maybe GHC.Integer.Type.Integer
    -> GHC.Maybe.Maybe GHC.Integer.Type.Integer
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m2,
     Unfolding: (\ (ds :: GHC.Maybe.Maybe GHC.Integer.Type.Integer) ->
                 Main.main_b2) -}
0a67b59969966b34bf57d00d21449978
  main4 ::
    (GHC.Maybe.Maybe GHC.Integer.Type.Integer
     -> Data.Functor.Identity.Identity
          (GHC.Maybe.Maybe GHC.Integer.Type.Integer))
    -> Web.Twitter.Conduit.Request.APIRequest
         Web.Twitter.Conduit.Status.StatusesHomeTimeline
         [Web.Twitter.Types.Status]
    -> Data.Functor.Identity.Identity
         (Web.Twitter.Conduit.Request.APIRequest
            Web.Twitter.Conduit.Status.StatusesHomeTimeline
            [Web.Twitter.Types.Status])
  {- Unfolding: (Web.Twitter.Conduit.Parameters.TH.wrappedParam
                   @ (Web.Twitter.Conduit.Request.APIRequest
                        Web.Twitter.Conduit.Status.StatusesHomeTimeline
                        [Web.Twitter.Types.Status])
                   @ GHC.Integer.Type.Integer
                   (Web.Twitter.Conduit.Request.$fParametersAPIRequest_$cparams
                      @ Web.Twitter.Conduit.Status.StatusesHomeTimeline
                      @ [Web.Twitter.Types.Status])
                     `cast`
                   (Sym (Web.Twitter.Conduit.Request.N:Parameters[0]
                             <Web.Twitter.Conduit.Request.APIRequest
                                Web.Twitter.Conduit.Status.StatusesHomeTimeline
                                [Web.Twitter.Types.Status]>_N))
                   Web.Twitter.Conduit.Status.$fHasCountParamAPIRequest4
                   Web.Twitter.Conduit.Request.PVInteger
                   Web.Twitter.Conduit.Request.unPVInteger
                   @ Data.Functor.Identity.Identity
                   Data.Functor.Identity.$fFunctorIdentity) -}
4fd888c79c656af89f0903ba29792c38
  main5 ::
    Data.Conduit.Internal.Pipe.Pipe
      () () Web.Twitter.Types.Status () GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
16d5721ed31119a21a7e5c5aed9d6e87
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main7) -}
af0c1390eb17e05c417def07b5a1b30d
  main7 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("# your home timeline (up to 800 tweets):"#) -}
720a39d9c34d07a714e70f761bb81a26
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main9) -}
5b638c539c27fe90a46dbd0971aff99e
  main9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Updating Status"#) -}
2ccfef59e8a52acd646a34a329b89a9f
  main_b1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (100) -}
2b470f4d9ba1d6edee49bfaa81a0082b
  main_b2 :: GHC.Maybe.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ GHC.Integer.Type.Integer
                   Main.main_b1) -}
060d8a149e6886115892c68283244154
  main_goRight ::
    Data.Conduit.Internal.Pipe.Pipe
      () () Web.Twitter.Types.Status () GHC.Types.IO ()
    -> Data.Conduit.Internal.Pipe.Pipe
         Web.Twitter.Types.Status
         Web.Twitter.Types.Status
         Web.Twitter.Types.Status
         ()
         GHC.Types.IO
         ()
    -> Data.Conduit.Internal.Pipe.Pipe
         () () Web.Twitter.Types.Status () GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
6add191fd8675ecab7af814592fda1a3
  tokens :: Web.Authenticate.OAuth.OAuth
  {- Strictness: m,
     Unfolding: (Web.Authenticate.OAuth.OAuth
                   Web.Twitter.Conduit.Types.twitterOAuth9
                   Web.Twitter.Conduit.Types.twitterOAuth7
                   Web.Twitter.Conduit.Types.twitterOAuth5
                   Web.Twitter.Conduit.Types.twitterOAuth3
                   Web.Authenticate.OAuth.HMACSHA1
                   Main.tokens2
                   Main.tokens1
                   (GHC.Maybe.Nothing @ Data.ByteString.Internal.ByteString)
                   (GHC.Maybe.Nothing @ Data.ByteString.Internal.ByteString)
                   Web.Authenticate.OAuth.OAuth10a) -}
4db90c5d5b814f76b4cc4fd338db8b2c
  tokens1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.tokens_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.tokens_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
6a786cc2ccde9e83e666cd1782949b1c
  tokens2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.tokens_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.tokens_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
c9449c0692e62340f2e9063480fe977d
  tokens_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("dxbSyeXfTut1maKrKF6WRFU2s22MQL0qJ51PrP1KsUGhYucF7w"#) -}
c88cb0cdc32a1d7d5b8b81c591410dd5
  tokens_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eMrgZIygYO2wYRmlgO5q4XA2O"#) -}
0d55649c3d2aa1282214dbd816a89920
  twInfo :: Web.Twitter.Conduit.Types.TWInfo
  {- Strictness: m,
     Unfolding: (Web.Twitter.Conduit.Types.TWInfo
                   Main.twInfo1
                   (GHC.Maybe.Nothing @ Network.HTTP.Client.Types.Proxy)) -}
ea3e93c33d00c8b8a201746c80187eea
  twInfo1 :: Web.Twitter.Conduit.Types.TWToken
  {- Strictness: m,
     Unfolding: (Web.Twitter.Conduit.Types.TWToken
                   Main.tokens
                   Main.credential1
                     `cast`
                   (Sym (Web.Authenticate.OAuth.N:Credential[0]))) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

